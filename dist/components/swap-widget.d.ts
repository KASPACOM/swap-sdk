import { SwapWidgetOptions, Erc20Token, SwapState, SwapSettings } from '../types';
export declare class SwapWidget {
    private options;
    private walletService;
    private swapService;
    private container;
    private state;
    private sellToken;
    private buyToken;
    private sellAmount;
    private buyAmount;
    private swapAction;
    private settings;
    private sellSection;
    private buySection;
    private swapButton;
    private connectWalletButton;
    private settingsButton;
    private tokenModal;
    private tokenModalSection;
    private allTokens;
    private tokenSearchDebounceTimer;
    private sellAmountDebounceTimer;
    private displayedTokens;
    private tradePath;
    private updateInterval;
    private errorModal;
    private disconnectWalletButton;
    constructor(options: SwapWidgetOptions);
    private initializeWidget;
    private render;
    private attachEventListeners;
    private loadInitialData;
    private onSellAmountChange;
    private onTokenSelect;
    private openTokenModal;
    private renderTokenList;
    private onTokenSearch;
    private onTokenSelected;
    private closeTokenModal;
    private onSwitchTokens;
    private onSwapClick;
    private onConnectWalletClick;
    private canSwap;
    private getSwapButtonText;
    private getConnectWalletButtonText;
    private updateTokenDisplay;
    private updateAmountDisplay;
    private updateBalances;
    private updateSwapButton;
    private updateButtons;
    private startPeriodicUpdates;
    private stopPeriodicUpdates;
    connectWallet(): Promise<string>;
    disconnectWallet(): void;
    setTokens(sellToken: Erc20Token, buyToken: Erc20Token): void;
    setAmounts(sellAmount: string, buyAmount: string): void;
    setSettings(settings: SwapSettings): void;
    getState(): SwapState;
    destroy(): void;
    showError(message: string): void;
    connectToWalletProvider(provider: any): Promise<string>;
}
//# sourceMappingURL=swap-widget.d.ts.map